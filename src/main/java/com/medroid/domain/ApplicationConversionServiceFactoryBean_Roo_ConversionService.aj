// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.medroid.domain;

import com.medroid.domain.ApplicationConversionServiceFactoryBean;
import com.medroid.domain.Careteam;
import com.medroid.domain.Doctor;
import com.medroid.domain.DoctorDiagnosis;
import com.medroid.domain.DoctorMessages;
import com.medroid.domain.DoctorNotifications;
import com.medroid.domain.DoctorStatus;
import com.medroid.domain.LogUserDoctor;
import com.medroid.domain.LogUserPatient;
import com.medroid.domain.Patient;
import com.medroid.domain.PatientAllergies;
import com.medroid.domain.PatientDischarge;
import com.medroid.domain.PatientMedications;
import com.medroid.domain.PatientMessages;
import com.medroid.domain.PatientNotifications;
import com.medroid.domain.PatientStatus;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Careteam, String> ApplicationConversionServiceFactoryBean.getCareteamToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.Careteam, java.lang.String>() {
            public String convert(Careteam careteam) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Careteam> ApplicationConversionServiceFactoryBean.getIdToCareteamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.Careteam>() {
            public com.medroid.domain.Careteam convert(java.lang.Long id) {
                return Careteam.findCareteam(id);
            }
        };
    }
    
    public Converter<String, Careteam> ApplicationConversionServiceFactoryBean.getStringToCareteamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.Careteam>() {
            public com.medroid.domain.Careteam convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Careteam.class);
            }
        };
    }
    
    public Converter<Doctor, String> ApplicationConversionServiceFactoryBean.getDoctorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.Doctor, java.lang.String>() {
            public String convert(Doctor doctor) {
                return new StringBuilder().append(doctor.getDoctorID()).append(' ').append(doctor.getFirstName()).append(' ').append(doctor.getLastName()).append(' ').append(doctor.getSpecialty()).toString();
            }
        };
    }
    
    public Converter<Long, Doctor> ApplicationConversionServiceFactoryBean.getIdToDoctorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.Doctor>() {
            public com.medroid.domain.Doctor convert(java.lang.Long id) {
                return Doctor.findDoctor(id);
            }
        };
    }
    
    public Converter<String, Doctor> ApplicationConversionServiceFactoryBean.getStringToDoctorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.Doctor>() {
            public com.medroid.domain.Doctor convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Doctor.class);
            }
        };
    }
    
    public Converter<DoctorDiagnosis, String> ApplicationConversionServiceFactoryBean.getDoctorDiagnosisToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.DoctorDiagnosis, java.lang.String>() {
            public String convert(DoctorDiagnosis doctorDiagnosis) {
                return new StringBuilder().append(doctorDiagnosis.getDiagnosis()).toString();
            }
        };
    }
    
    public Converter<Long, DoctorDiagnosis> ApplicationConversionServiceFactoryBean.getIdToDoctorDiagnosisConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.DoctorDiagnosis>() {
            public com.medroid.domain.DoctorDiagnosis convert(java.lang.Long id) {
                return DoctorDiagnosis.findDoctorDiagnosis(id);
            }
        };
    }
    
    public Converter<String, DoctorDiagnosis> ApplicationConversionServiceFactoryBean.getStringToDoctorDiagnosisConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.DoctorDiagnosis>() {
            public com.medroid.domain.DoctorDiagnosis convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DoctorDiagnosis.class);
            }
        };
    }
    
    public Converter<DoctorMessages, String> ApplicationConversionServiceFactoryBean.getDoctorMessagesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.DoctorMessages, java.lang.String>() {
            public String convert(DoctorMessages doctorMessages) {
                return new StringBuilder().append(doctorMessages.getDateRecorded()).append(' ').append(doctorMessages.getMessagetxt()).append(' ').append(doctorMessages.getPatientID()).toString();
            }
        };
    }
    
    public Converter<Long, DoctorMessages> ApplicationConversionServiceFactoryBean.getIdToDoctorMessagesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.DoctorMessages>() {
            public com.medroid.domain.DoctorMessages convert(java.lang.Long id) {
                return DoctorMessages.findDoctorMessages(id);
            }
        };
    }
    
    public Converter<String, DoctorMessages> ApplicationConversionServiceFactoryBean.getStringToDoctorMessagesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.DoctorMessages>() {
            public com.medroid.domain.DoctorMessages convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DoctorMessages.class);
            }
        };
    }
    
    public Converter<DoctorNotifications, String> ApplicationConversionServiceFactoryBean.getDoctorNotificationsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.DoctorNotifications, java.lang.String>() {
            public String convert(DoctorNotifications doctorNotifications) {
                return new StringBuilder().append(doctorNotifications.getDateRecorded()).append(' ').append(doctorNotifications.getMessagetxt()).append(' ').append(doctorNotifications.getPatientID()).toString();
            }
        };
    }
    
    public Converter<Long, DoctorNotifications> ApplicationConversionServiceFactoryBean.getIdToDoctorNotificationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.DoctorNotifications>() {
            public com.medroid.domain.DoctorNotifications convert(java.lang.Long id) {
                return DoctorNotifications.findDoctorNotifications(id);
            }
        };
    }
    
    public Converter<String, DoctorNotifications> ApplicationConversionServiceFactoryBean.getStringToDoctorNotificationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.DoctorNotifications>() {
            public com.medroid.domain.DoctorNotifications convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DoctorNotifications.class);
            }
        };
    }
    
    public Converter<DoctorStatus, String> ApplicationConversionServiceFactoryBean.getDoctorStatusToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.DoctorStatus, java.lang.String>() {
            public String convert(DoctorStatus doctorStatus) {
                return new StringBuilder().append(doctorStatus.getDoctorID()).append(' ').append(doctorStatus.getStatus()).toString();
            }
        };
    }
    
    public Converter<Long, DoctorStatus> ApplicationConversionServiceFactoryBean.getIdToDoctorStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.DoctorStatus>() {
            public com.medroid.domain.DoctorStatus convert(java.lang.Long id) {
                return DoctorStatus.findDoctorStatus(id);
            }
        };
    }
    
    public Converter<String, DoctorStatus> ApplicationConversionServiceFactoryBean.getStringToDoctorStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.DoctorStatus>() {
            public com.medroid.domain.DoctorStatus convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DoctorStatus.class);
            }
        };
    }
    
    public Converter<LogUserDoctor, String> ApplicationConversionServiceFactoryBean.getLogUserDoctorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.LogUserDoctor, java.lang.String>() {
            public String convert(LogUserDoctor logUserDoctor) {
                return new StringBuilder().append(logUserDoctor.getUsername()).append(' ').append(logUserDoctor.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, LogUserDoctor> ApplicationConversionServiceFactoryBean.getIdToLogUserDoctorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.LogUserDoctor>() {
            public com.medroid.domain.LogUserDoctor convert(java.lang.Long id) {
                return LogUserDoctor.findLogUserDoctor(id);
            }
        };
    }
    
    public Converter<String, LogUserDoctor> ApplicationConversionServiceFactoryBean.getStringToLogUserDoctorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.LogUserDoctor>() {
            public com.medroid.domain.LogUserDoctor convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), LogUserDoctor.class);
            }
        };
    }
    
    public Converter<LogUserPatient, String> ApplicationConversionServiceFactoryBean.getLogUserPatientToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.LogUserPatient, java.lang.String>() {
            public String convert(LogUserPatient logUserPatient) {
                return new StringBuilder().append(logUserPatient.getUsername()).append(' ').append(logUserPatient.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, LogUserPatient> ApplicationConversionServiceFactoryBean.getIdToLogUserPatientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.LogUserPatient>() {
            public com.medroid.domain.LogUserPatient convert(java.lang.Long id) {
                return LogUserPatient.findLogUserPatient(id);
            }
        };
    }
    
    public Converter<String, LogUserPatient> ApplicationConversionServiceFactoryBean.getStringToLogUserPatientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.LogUserPatient>() {
            public com.medroid.domain.LogUserPatient convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), LogUserPatient.class);
            }
        };
    }
    
    public Converter<Patient, String> ApplicationConversionServiceFactoryBean.getPatientToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.Patient, java.lang.String>() {
            public String convert(Patient patient) {
                return new StringBuilder().append(patient.getPatientID()).append(' ').append(patient.getFirstName()).append(' ').append(patient.getLastName()).append(' ').append(patient.getMiddleName()).toString();
            }
        };
    }
    
    public Converter<Long, Patient> ApplicationConversionServiceFactoryBean.getIdToPatientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.Patient>() {
            public com.medroid.domain.Patient convert(java.lang.Long id) {
                return Patient.findPatient(id);
            }
        };
    }
    
    public Converter<String, Patient> ApplicationConversionServiceFactoryBean.getStringToPatientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.Patient>() {
            public com.medroid.domain.Patient convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Patient.class);
            }
        };
    }
    
    public Converter<PatientAllergies, String> ApplicationConversionServiceFactoryBean.getPatientAllergiesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.PatientAllergies, java.lang.String>() {
            public String convert(PatientAllergies patientAllergies) {
                return new StringBuilder().append(patientAllergies.getAllergy()).toString();
            }
        };
    }
    
    public Converter<Long, PatientAllergies> ApplicationConversionServiceFactoryBean.getIdToPatientAllergiesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.PatientAllergies>() {
            public com.medroid.domain.PatientAllergies convert(java.lang.Long id) {
                return PatientAllergies.findPatientAllergies(id);
            }
        };
    }
    
    public Converter<String, PatientAllergies> ApplicationConversionServiceFactoryBean.getStringToPatientAllergiesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.PatientAllergies>() {
            public com.medroid.domain.PatientAllergies convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PatientAllergies.class);
            }
        };
    }
    
    public Converter<PatientDischarge, String> ApplicationConversionServiceFactoryBean.getPatientDischargeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.PatientDischarge, java.lang.String>() {
            public String convert(PatientDischarge patientDischarge) {
                return new StringBuilder().append(patientDischarge.getPatientID()).append(' ').append(patientDischarge.getEstimatedDischargeDate()).toString();
            }
        };
    }
    
    public Converter<Long, PatientDischarge> ApplicationConversionServiceFactoryBean.getIdToPatientDischargeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.PatientDischarge>() {
            public com.medroid.domain.PatientDischarge convert(java.lang.Long id) {
                return PatientDischarge.findPatientDischarge(id);
            }
        };
    }
    
    public Converter<String, PatientDischarge> ApplicationConversionServiceFactoryBean.getStringToPatientDischargeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.PatientDischarge>() {
            public com.medroid.domain.PatientDischarge convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PatientDischarge.class);
            }
        };
    }
    
    public Converter<PatientMedications, String> ApplicationConversionServiceFactoryBean.getPatientMedicationsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.PatientMedications, java.lang.String>() {
            public String convert(PatientMedications patientMedications) {
                return new StringBuilder().append(patientMedications.getMedication()).toString();
            }
        };
    }
    
    public Converter<Long, PatientMedications> ApplicationConversionServiceFactoryBean.getIdToPatientMedicationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.PatientMedications>() {
            public com.medroid.domain.PatientMedications convert(java.lang.Long id) {
                return PatientMedications.findPatientMedications(id);
            }
        };
    }
    
    public Converter<String, PatientMedications> ApplicationConversionServiceFactoryBean.getStringToPatientMedicationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.PatientMedications>() {
            public com.medroid.domain.PatientMedications convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PatientMedications.class);
            }
        };
    }
    
    public Converter<PatientMessages, String> ApplicationConversionServiceFactoryBean.getPatientMessagesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.PatientMessages, java.lang.String>() {
            public String convert(PatientMessages patientMessages) {
                return new StringBuilder().append(patientMessages.getDateRecorded()).append(' ').append(patientMessages.getMessagetxt()).append(' ').append(patientMessages.getDoctorID()).toString();
            }
        };
    }
    
    public Converter<Long, PatientMessages> ApplicationConversionServiceFactoryBean.getIdToPatientMessagesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.PatientMessages>() {
            public com.medroid.domain.PatientMessages convert(java.lang.Long id) {
                return PatientMessages.findPatientMessages(id);
            }
        };
    }
    
    public Converter<String, PatientMessages> ApplicationConversionServiceFactoryBean.getStringToPatientMessagesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.PatientMessages>() {
            public com.medroid.domain.PatientMessages convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PatientMessages.class);
            }
        };
    }
    
    public Converter<PatientNotifications, String> ApplicationConversionServiceFactoryBean.getPatientNotificationsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.PatientNotifications, java.lang.String>() {
            public String convert(PatientNotifications patientNotifications) {
                return new StringBuilder().append(patientNotifications.getDateRecorded()).append(' ').append(patientNotifications.getMessagetxt()).append(' ').append(patientNotifications.getDoctorID()).toString();
            }
        };
    }
    
    public Converter<Long, PatientNotifications> ApplicationConversionServiceFactoryBean.getIdToPatientNotificationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.PatientNotifications>() {
            public com.medroid.domain.PatientNotifications convert(java.lang.Long id) {
                return PatientNotifications.findPatientNotifications(id);
            }
        };
    }
    
    public Converter<String, PatientNotifications> ApplicationConversionServiceFactoryBean.getStringToPatientNotificationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.PatientNotifications>() {
            public com.medroid.domain.PatientNotifications convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PatientNotifications.class);
            }
        };
    }
    
    public Converter<PatientStatus, String> ApplicationConversionServiceFactoryBean.getPatientStatusToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.medroid.domain.PatientStatus, java.lang.String>() {
            public String convert(PatientStatus patientStatus) {
                return new StringBuilder().append(patientStatus.getPatientID()).append(' ').append(patientStatus.getStatus()).toString();
            }
        };
    }
    
    public Converter<Long, PatientStatus> ApplicationConversionServiceFactoryBean.getIdToPatientStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.medroid.domain.PatientStatus>() {
            public com.medroid.domain.PatientStatus convert(java.lang.Long id) {
                return PatientStatus.findPatientStatus(id);
            }
        };
    }
    
    public Converter<String, PatientStatus> ApplicationConversionServiceFactoryBean.getStringToPatientStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.medroid.domain.PatientStatus>() {
            public com.medroid.domain.PatientStatus convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PatientStatus.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCareteamToStringConverter());
        registry.addConverter(getIdToCareteamConverter());
        registry.addConverter(getStringToCareteamConverter());
        registry.addConverter(getDoctorToStringConverter());
        registry.addConverter(getIdToDoctorConverter());
        registry.addConverter(getStringToDoctorConverter());
        registry.addConverter(getDoctorDiagnosisToStringConverter());
        registry.addConverter(getIdToDoctorDiagnosisConverter());
        registry.addConverter(getStringToDoctorDiagnosisConverter());
        registry.addConverter(getDoctorMessagesToStringConverter());
        registry.addConverter(getIdToDoctorMessagesConverter());
        registry.addConverter(getStringToDoctorMessagesConverter());
        registry.addConverter(getDoctorNotificationsToStringConverter());
        registry.addConverter(getIdToDoctorNotificationsConverter());
        registry.addConverter(getStringToDoctorNotificationsConverter());
        registry.addConverter(getDoctorStatusToStringConverter());
        registry.addConverter(getIdToDoctorStatusConverter());
        registry.addConverter(getStringToDoctorStatusConverter());
        registry.addConverter(getLogUserDoctorToStringConverter());
        registry.addConverter(getIdToLogUserDoctorConverter());
        registry.addConverter(getStringToLogUserDoctorConverter());
        registry.addConverter(getLogUserPatientToStringConverter());
        registry.addConverter(getIdToLogUserPatientConverter());
        registry.addConverter(getStringToLogUserPatientConverter());
        registry.addConverter(getPatientToStringConverter());
        registry.addConverter(getIdToPatientConverter());
        registry.addConverter(getStringToPatientConverter());
        registry.addConverter(getPatientAllergiesToStringConverter());
        registry.addConverter(getIdToPatientAllergiesConverter());
        registry.addConverter(getStringToPatientAllergiesConverter());
        registry.addConverter(getPatientDischargeToStringConverter());
        registry.addConverter(getIdToPatientDischargeConverter());
        registry.addConverter(getStringToPatientDischargeConverter());
        registry.addConverter(getPatientMedicationsToStringConverter());
        registry.addConverter(getIdToPatientMedicationsConverter());
        registry.addConverter(getStringToPatientMedicationsConverter());
        registry.addConverter(getPatientMessagesToStringConverter());
        registry.addConverter(getIdToPatientMessagesConverter());
        registry.addConverter(getStringToPatientMessagesConverter());
        registry.addConverter(getPatientNotificationsToStringConverter());
        registry.addConverter(getIdToPatientNotificationsConverter());
        registry.addConverter(getStringToPatientNotificationsConverter());
        registry.addConverter(getPatientStatusToStringConverter());
        registry.addConverter(getIdToPatientStatusConverter());
        registry.addConverter(getStringToPatientStatusConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
